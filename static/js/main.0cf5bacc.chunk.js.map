{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","description","RenderComments","comments","postComment","dishId","console","log","cmnts","comment","myDate","Date","date","toLocaleString","year","month","day","author","class","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","alert","JSON","stringify","isOpen","toggle","onSubmit","htmlFor","md","select","model","type","htmlfor","text","placeholder","validators","minLength","show","messages","textarea","rows","color","Component","connect","tempComments","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","outline","innerRef","input","check","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","role","size","offset","checkbox","RenderLeader","List","left","middle","object","body","heading","subheading","About","leaders","title","ADD_COMMENT","DISHES_LOADING","ADD_DISHES","DISHES_FAILED","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","rating","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","ActionTypes","payload","addComment","catch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","resetFeedbackForm","postFeedback","location","key","withRouter","newValue","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cf5bacc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div className=\"col-12\">\r\n      <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n      <small>Loading...</small>\r\n    </div>\r\n  );\r\n};\r\n","export const baseUrl = \"http://localhost:3001/\";\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport {baseUrl} from '../shared/baseUrl'\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        {\" \"}\r\n        {/* Using backtics to pass variable in a string */}\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n\r\n// constructor(props) {\r\n//   super(props); //Supply props to super class i.e the parent class(The component class is the parent class here)\r\n//   // Creates a State which stores properties related to the component\r\n\r\n//Render method returns what needs to be displayed on th UI by this component\r\n\r\n//What we render is called as a view\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n    return (\r\n      //Whenever we create a list in react every attribute requires a key  which helps react to recognize each of the elements\r\n      // Bootstrap classes used here will display cards one below each other if on smaller screen, else will display them side by side\r\n      <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n        <RenderMenuItem dish={dish} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  if (props.dishes.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dishes.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.dishes.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        {/* Bootstrap 4 class which divides each row into a grid of 12 columns */}\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n          </Breadcrumb>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h3>Menu</h3>\r\n          <hr />\r\n        </div>\r\n        <div className=\"row\">{menu}</div>\r\n        <div className=\"row\"></div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Modal,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nfunction RenderDish({ dish }) {\r\n  if (dish != null) {\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\",\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  } else {\r\n    //We return an empty div so that nothing will be rendered here as we cannot return null\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n  if (comments != null) {\r\n    console.log(comments);\r\n    const cmnts = comments.map((comment) => {\r\n      let myDate = new Date(comment.date);\r\n      myDate = myDate.toLocaleString(\"en-US\", {\r\n        year: \"numeric\", // numeric, 2-digit\r\n        month: \"long\", // numeric, 2-digit, long, short, narrow\r\n        day: \"numeric\",\r\n      });\r\n      return (\r\n        <div className=\"container\">\r\n          <div>\r\n            <li>{comment.comment}</li>\r\n            <li>\r\n              -- {comment.author} , {myDate.toLocaleString()}\r\n            </li>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>\r\n            <h4>Comments</h4>\r\n          </CardTitle>\r\n          <CardText>\r\n            <ul class=\"list-unstyled\">\r\n              <Stagger in>\r\n                <Fade in>{cmnts}</Fade>\r\n              </Stagger>\r\n            </ul>\r\n          </CardText>\r\n          <CommentForm dishId={dishId} postComment={postComment} />\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    // this.props.postComment(\r\n    //   console.log(this.props),\r\n    //   this.props.dishId,\r\n    //   values.rating,\r\n    //   values.author,\r\n    //   values.comment\r\n    // );\r\n    // console.log(this.props, \"Current State is:\" + JSON.stringify(values));\r\n    alert(\"Current State is:\" + JSON.stringify(values));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n        </Button> */}\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={10}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"rating\"\r\n                    id=\"rating\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlfor=\"author\" md={10}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlfor=\"comment\" md={10}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows=\"5\"\r\n                    validators={{ required }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".comment\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" color=\"primary\" onClick>\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h3>{props.dish.name}</h3>\r\n          <hr />\r\n        </div>\r\n        {/* Bootstrap 4 class which divides each row into a grid of 12 columns */}\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1 \">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1 \">\r\n            <RenderComments\r\n              comments={props.comments}\r\n              postComment={props.postComment}\r\n              dishId={props.dish.id}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tempComments: state.comments,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(DishDetail);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Navbar,\r\n  Nav,\r\n  Collapse,\r\n  NavItem,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Modal,\r\n  Button,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n    };\r\n    //this.toggleNav  = this.toggleNav.bind(this);\r\n    // Inorder to make the function available in our JSX, we need to bind this. Alternatively we can use an arrow function in the JSX itself instead of binding it\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n  toggleNav() {\r\n    //We negate whatever the state value maybe\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  handleLogin(event){\r\n      this.toggleModal();\r\n      alert('Username: ' + this.username.value + ' Password: ' + this.password.value + \" Remember: \" + this.remember.checked );\r\n      event.preventDefault();\r\n  }\r\n  render() {\r\n    return (\r\n      //React Fragment ' <> </> ' or '<React.Fragment> </React.Fragment>' : Allows us to group together a bunch of react elements and then return it instead of enclosing it into one element (i.e inside a <div></div>). When we use a div for the same, a node gets added into the react DOM. But react fragment saves us a div as it does not get added into the DOM as a div\r\n      <>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img\r\n                src=\"assets/images/logo.png\"\r\n                height=\"30\"\r\n                width=\"41\"\r\n                alt=\"Risorante Con Fusion\"\r\n              />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact\r\n                    Us\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Risorante Con Fusion</h1>\r\n                <p>\r\n                  {\" \"}\r\n                  We take inspiration from the World's best cuisines,and create\r\n                  a unique fusion experience.Our lipsmacking creation will\r\n                  tickle your culinary senses!{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                {/* Using innerRef i.e references to retrieve values of the form */}\r\n                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username=input } />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password=input } />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember=input} />\r\n                  Remember Me\r\n                </Label>\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else {\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: \"scale(0.5) translateY(-50%)\",\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? (\r\n              <CardSubtitle>{item.designation}</CardSubtitle>\r\n            ) : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess} //try dishes to dishErrMess if error\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.leader}\r\n            isLoading={props.leadersLoading}\r\n            errMess={props.leadersErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Label,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, Form, Errors,  } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.state = {\r\n    //   firstname: \"\",\r\n    //   lastname: \"\",\r\n    //   telnum: \"\",\r\n    //   email: \"\",\r\n    //   agree: false,\r\n    //   contactType: \"Tel.\",\r\n    //   message: \"\",\r\n    //   // Check if a form element has been  modified or not. We validate an input box only if it has been touched(i.e modified)\r\n    //   touched: {\r\n    //     firstname: false,\r\n    //     lastname: false,\r\n    //     telnum: false,\r\n    //     email: false,\r\n    //   },\r\n    // };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.handleInputChange = this.handleInputChange.bind(this);\r\n    // this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  // Events which handle submit and input change\r\n\r\n  // handleInputChange(event) {\r\n  //   // Retrieve target input i.e the changed input\r\n  //   const target = event.target;\r\n  //   const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n  //   const name = target.name;\r\n\r\n  //   //Set the modified state as current state of the target input\r\n  //   this.setState({\r\n  //     [name]: value,\r\n  //   });\r\n  // }\r\n  handleSubmit = (values) => {\r\n    console.log(\"Form Submitted. Current State is: \" + JSON.stringify(values));\r\n    console.log(this.props);\r\n    alert(\"Form Submitted. Current State is: \" + JSON.stringify(values));\r\n    // this.props.postFeedback(values);\r\n    // this.props.resetFeedbackForm();\r\n    // event.preventDefault();\r\n    // event.preventDefault() prevents the default behaviour of the page being reloaded wehn the form is submitted\r\n  }\r\n\r\n  // Invoked when a field is touched\r\n  // handleBlur = (field) => (evt) => {\r\n  //   this.setState({\r\n  //     touched: { ...this.state.touched, [field]: true },\r\n  //   });\r\n  // };\r\n\r\n  // Client sided form validations\r\n  // validate(firstname, lastname, telnum, email) {\r\n  //   const errors = {\r\n  //     firstname: \"\",\r\n  //     lastname: \"\",\r\n  //     telnum: \"\",\r\n  //     email: \"\",\r\n  //   };\r\n\r\n  //   if (this.state.touched.firstname && firstname.length < 3) {\r\n  //     errors.firstname = \"First Name should be >= to 3 characters\";\r\n  //   } else if (this.state.touched.firstname && firstname.length > 10) {\r\n  //     errors.firstname = \"First Name should be <= to 10 characters\";\r\n  //   }\r\n\r\n  //   if (this.state.touched.lastname && lastname.length < 3) {\r\n  //     errors.lastname = \"Last Name should be >= to 3 characters\";\r\n  //   } else if (this.state.touched.lastname && lastname.length > 10) {\r\n  //     errors.lastname = \"Last Name should be <= to 10 characters\";\r\n  //   }\r\n\r\n  //   // Regular expression to ensure that the telephone number only consists of integers\r\n  //   const reg = /^\\d+$/;\r\n  //   if (this.state.touched.telnum && !reg.test(telnum)) {\r\n  //     errors.telnum = \"Tel. Number should contain only numbers\";\r\n  //   } else if (this.state.touched.telnum && telnum.length != 10) {\r\n  //     errors.telnum = \"Tel. Number should contain exactly 10 digits\";\r\n  //   }\r\n\r\n  //   if (\r\n  //     this.state.touched.email &&\r\n  //     email.split(\"\").filter((x) => x === \"@\").length !== 1\r\n  //   ) {\r\n  //     errors.email = \"Email should contain a @\";\r\n  //   }\r\n\r\n  //   return errors;\r\n  // }\r\n\r\n  render() {\r\n    // const errors = this.validate(\r\n    //   this.state.firstname,\r\n    //   this.state.lastname,\r\n    //   this.state.telnum,\r\n    //   this.state.email\r\n    // );\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact US</BreadcrumbItem>\r\n          </Breadcrumb>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h3>Contact Us</h3>\r\n          <hr />\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 mt-3\">\r\n            <h3>Send Us Your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9 mt-3\">\r\n            {/* Tie our form to use handle submit  */}\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                {/* We use htmlfor instead of using the generic 'for' (in the same way as we used className instead of class) */}\r\n                <Label htmlfor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                {/* React Strap class instead of bootstrap class col-md-10 */}\r\n                <Col md={10}>\r\n                  {/* Now the form becomes a controlled form as we have introduced a state variable as the value attribute in the form */}\r\n                  {/* To connect OnInputChange event handler to our forms, we need to add a onChange behaviour to the input of each of our form element */}\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                    // value={this.state.firstname}\r\n                    // valid={errors.firstname === \"\"}\r\n                    // invalid={errors.firstname !== \"\"}\r\n                    // onBlur={this.handleBlur(\"firstname\")}\r\n                    // onChange={this.handleInputChange}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlfor=\"firstname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                    // value={this.state.lastname}\r\n                    // valid={errors.lastname === \"\"}\r\n                    // invalid={errors.lastname !== \"\"}\r\n                    // onBlur={this.handleBlur(\"lastname\")}\r\n                    // onChange={this.handleInputChange}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlfor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    className=\"form-control\"\r\n                    type=\"tel\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                    // value={this.state.telnum}\r\n                    // valid={errors.telnum === \"\"}\r\n                    // invalid={errors.telnum !== \"\"}\r\n                    // onBlur={this.handleBlur(\"telnum\")}\r\n                    // onChange={this.handleInputChange}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \" Required \",\r\n                      minLength: \" Must be greater than 2 numbers \",\r\n                      maxLength: \" Must be 15 characters or less \",\r\n                      isNumber: \" Must be a number \",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlfor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    validators={{ required, validEmail }}\r\n                    // value={this.state.email}\r\n                    // valid={errors.email === \"\"}\r\n                    // invalid={errors.email !== \"\"}\r\n                    // onBlur={this.handleBlur(\"email\")}\r\n                    // onChange={this.handleInputChange}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      validEmail: \"Invalid Email Address \",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                {/* Using a js object to specify properties */}\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        className=\"form-check-input\"\r\n                        name=\"agree\"\r\n                        // type=\"checkbox\"\r\n                        // checked={this.state.agree}\r\n                        // onChange={this.handleInputChange}\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    className=\"form-control\"\r\n                    type=\"select\"\r\n                    name=\"contactType\"\r\n                    // value={this.state.contactType}\r\n                    // onChange={this.handleInputChange}\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlfor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    // value={this.state.message}\r\n                    // onChange={this.handleInputChange}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Fade,Stagger} from 'react-animation-components';\r\nimport {baseUrl} from '../shared/baseUrl'\r\n\r\nfunction RenderLeader({ leader }) {\r\n  return (\r\n    <Media List key={leader.id}>\r\n      <Media left middle>\r\n        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n      </Media>\r\n      <Media body className=\"ml-5\">\r\n        <Media heading>{leader.name}</Media>\r\n        <Media subheading>{leader.designation}</Media>\r\n        <Media text className=\"mt-3\">\r\n          {leader.description}\r\n        </Media>\r\n        <br />\r\n      </Media>\r\n    </Media>\r\n  );\r\n}\r\n\r\nfunction About(props) {\r\n  const leaders = props.leaders.map((leader) => {\r\n    return (\r\n      <Fade in>\r\n        <RenderLeader leader={leader} />{\" \"}\r\n      </Fade>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Stagger in>{leaders}</Stagger>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS'; \r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment,\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response)))\r\n    .catch((error) => {\r\n      console.log(\"Post Comments \", error.message);\r\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n  dispatch(dishesLoading(true));\r\n\r\n  //Communication with the server\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json()) //Handle the promise using .then & respone.json converts the response into json\r\n    .then((dishes) => dispatch(addDishes(dishes)))\r\n    .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes,\r\n});\r\n\r\n//dispatch convertible to async function\r\nexport const fetchComments = () => (dispatch) => {\r\n  //Communication with the server\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json()) //Handle the promise using .then & respone.json converts the response into json\r\n    .then((comments) => dispatch(addComments(comments)))\r\n    .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading());\r\n\r\n  //Communication with the server\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \":\" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json()) //Handle the promise using .then & respone.json converts the response into json\r\n    .then((promos) => dispatch(addPromos(promos)))\r\n    .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(dishesLoading(true));\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          let error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((leaders) => dispatch(addLeaders(leaders)))\r\n    .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders,\r\n});\r\n\r\nexport const postFeedback = (value) => {\r\n  let newValue = { ...value };\r\n  newValue.date = new Date().toISOString();\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newValue),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    credentials: \"same-origin\",\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          let error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        let errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => alert(JSON.stringify(response)))\r\n    .catch((error) => {\r\n      console.log(\"Post comments \", error.message);\r\n      alert(\"Your Feedback could not be submitted\\nError: \" + error.message);\r\n    });\r\n};\r\n","import Menu from \"./MenuComponent\";\r\nimport { Component } from \"react\";\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  postComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback,\r\n} from \"../redux/ActionCreators\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n// This will map redux's store's state into props so that they become available to our component\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment((dishId, rating, author, comment))),\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  fetchComments: () => {\r\n    dispatch(fetchComments());\r\n  },\r\n  fetchPromos: () => {\r\n    dispatch(fetchPromos());\r\n  },\r\n  fetchLeaders: () => {\r\n    dispatch(fetchLeaders());\r\n  },\r\n  postFeedback: (values) => {\r\n    dispatch(postFeedback(values));\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n});\r\n\r\nclass Main extends Component {\r\n  // We need to define the state in here for which we need a constructor to do so\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.state);\r\n    //Lifting the state up\r\n    // this.state = {\r\n    //Whenever we click on a dishes,then we will make the dish information equal to the selected dish\r\n    // };\r\n    // We removed state from here and now will obtain state information form the redux store\r\n  }\r\n\r\n  //Component did mount gets executed just after the component gets mounted in the view of the application. So this is a good time to fetch any data that we require for the application\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(\r\n              (promo) => promo.featured\r\n            )[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter((leader) => leader.featured)[0]\r\n          }\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          {/* It's classNames and not className for CSSTransistion component */}\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            {/* Enclose routes using switch */}\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              {/* Using functional component so that we can pass props */}\r\n              <Route\r\n                exact\r\n                path=\"/menu\"\r\n                component={() => <Menu dishes={this.props.dishes} />}\r\n              />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route\r\n                exact\r\n                path=\"/contactus\"\r\n                component={() => (\r\n                  <Contact\r\n                    resetFeedbackForm={this.props.resetFeedbackForm}\r\n                    postFeedback={this.props.postFeedback}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/aboutus\"\r\n                component={() => <About leaders={this.props.leaders.leaders} />}\r\n              />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//Connect redux with main component. withRouter used to connect component to React Router\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n \r\nexport const Dishes = (\r\n  state = { isLoading: true, errMess: null, dishes: [] },action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_DISHES:\r\n        return {...state,isLoading:false,errMess:null,dishes:action.payload}\r\n    case ActionTypes.DISHES_LOADING:\r\n        return {...state,isLoading:true,errMess:null,dishes:[]}\r\n    case ActionTypes.DISHES_FAILED:\r\n        return {...state,isLoading:false,errMess:action.payload,dishes:[]}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","//This reducer will receive action(in actiontypes) from the redux store. Therefore we import\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        comments: action.payload,\r\n      };\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: action.payload,\r\n        comments: [],\r\n      };\r\n    case ActionTypes.ADD_COMMENT:\r\n      var comment = action.payload;\r\n\r\n      //All state updates must be done immutably so we use concat() function to create a new object of the state(copy of the state) and push the new array values into the state array.In this way we modify the state values immutably as Redux expects\r\n      console.log(\"Comment: \", comment);\r\n      return { ...state, comments: state.comments.concat(comment) };\r\n    //Also this will only add values in array temporarily if not using json server\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Promotions = (\r\n  state = { isLoading: true, errMess: null, promotions: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PROMOS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        promotions: action.payload,\r\n      };\r\n    case ActionTypes.PROMOS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n    case ActionTypes.PROMOS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = (state={\r\n        isLoading:true,\r\n        errMess:null,\r\n        leaders:[]\r\n},action) =>{\r\n    switch (action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state,isLoading:false,errMess:null,leaders:action.payload}\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state,isLoading:true,errMess:null,leaders:[]}\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return{...state,isLoading:false,errMess:action.payload,leaders:[]}\r\n        default:\r\n            return state\r\n    }\r\n}","export const InitialFeedback = {\r\n  firstname: \"\",\r\n  lastname: \"\",\r\n  telnum: \"\",\r\n  email: \"\",\r\n  agree: false,\r\n  contactType: \"Tel.\",\r\n  message: \"\",\r\n};\r\n","import Main from \"./components/MainComponent\";\r\nimport \"./App.css\";\r\nimport { Component } from \"react\"; \r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport {ConfigureStore} from './redux/configureStore'\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      //Enclosed return statement in between <BrowserRouter></BrowserRouter> to make use of react router\r\n      //Provider makes the store available to all the components\r\n      <Provider store={store}>\r\n      <BrowserRouter>\r\n      <div>\r\n        <Main />\r\n      </div>\r\n      </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// We need to define the state in here for which we need a constructor to do so\r\n//Lifting the state up\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comments\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { InitialFeedback } from \"./forms\";\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments: Comments,\r\n      leaders: Leaders,\r\n      promotions: Promotions,\r\n      ...createForms({\r\n        feedback: InitialFeedback\r\n      }),\r\n    }),\r\n    applyMiddleware(thunk, logger) //Passed as enhancers\r\n  );\r\n\r\n  return store;\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}